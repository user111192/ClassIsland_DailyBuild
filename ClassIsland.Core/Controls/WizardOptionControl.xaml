<UserControl x:Name="userControl" x:Class="ClassIsland.Core.Controls.WizardOptionControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:ClassIsland.Core.Converters"
             xmlns:controls="clr-namespace:ClassIsland.Core.Controls"
             Cursor="Hand"
             mc:Ignorable="d" d:DesignWidth="450">
    <UserControl.Resources>
        <Storyboard x:Key="SelectIntro">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SelectOutro">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuadraticEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <converters:BooleanToVisibilityConverter2 x:Key="BooleanToVisibilityConverter2" />
    </UserControl.Resources>
    <Border CornerRadius="4"
            Background="{DynamicResource MaterialDesignPaper}"
            ClipToBounds="True">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type controls:WizardOptionControl}, Mode=FindAncestor}}"
                        Value="True">
                        <Setter Property="BorderThickness" Value="2.5"/>
                        <Setter Property="Padding" Value="10.5 10.5 10.5 6.5"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type controls:WizardOptionControl}, Mode=FindAncestor}}"
                        Value="True">
                        <Setter Property="BorderThickness" Value="2.5"/>
                        <Setter Property="Padding" Value="10.5 10.5 10.5 6.5"/>
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="12 12 12 8"/>

            </Style>
        </Border.Style>
        <Grid Margin="0 0 0 2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <materialDesign:Ripple Grid.Column="0" Grid.Row="0"
                                   Grid.ColumnSpan="2" Grid.RowSpan="4"
                                   Margin="-12"
                                   Feedback="{DynamicResource PrimaryHueMidBrush}"/>
            <!-- Icon -->
            <materialDesign:PackIcon Grid.Column="0" Grid.Row="0"
                                     IsHitTestVisible="False"
                                     Margin="0 0 8 0"
                                     Kind="ArrowRight"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center"
                                     Foreground="{DynamicResource PrimaryHueMidBrush}"/>
            <!-- Header -->
            <TextBlock Grid.Column="1" Grid.Row="0"
                       IsHitTestVisible="False"
                       Margin="0 0 0 0"
                       Foreground="{DynamicResource PrimaryHueMidBrush}"
                       FontWeight="Bold"
                       FontSize="16"
                       d:Text="选项标题。"
                       Text="{Binding OptionHeader, RelativeSource={RelativeSource AncestorType={x:Type controls:WizardOptionControl}, Mode=FindAncestor}}" />
            <!-- Selected -->
            <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"
                    VerticalAlignment="Top"
                    IsHitTestVisible="False"
                    Margin="-12 6 -12 6"
                    Background="{DynamicResource MaterialDesignDivider}">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type controls:WizardOptionControl}, Mode=FindAncestor}}"
                                Value="True">
                                <Setter Property="Height" Value="2"/>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Height" Value="1"/>
                    </Style>
                </Border.Style>
            </Border>
            <Border Grid.Column="0" x:Name="BorderUnderline" Grid.Row="1" Height="2" Grid.ColumnSpan="2"
                    VerticalAlignment="Top"
                    IsHitTestVisible="False"
                    Margin="-12 6 -12 6"
                    Background="{DynamicResource PrimaryHueMidBrush}" RenderTransformOrigin="0,0.5">
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="0" ScaleY="1" />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Border.RenderTransform>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type controls:WizardOptionControl}, Mode=FindAncestor}}"
                                Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectIntro}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectOutro}" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <!-- Content -->
            <TextBlock Grid.Column="1" Grid.Row="2"
                       Margin="0"
                       IsHitTestVisible="False"
                       FontSize="14"
                       d:Text="{StaticResource TestStringLong}"
                       TextWrapping="Wrap"
                       Text="{Binding OptionContent, RelativeSource={RelativeSource AncestorType={x:Type controls:WizardOptionControl}, Mode=FindAncestor}}" />
            <!-- Button -->
            <Button Grid.Column="1" Grid.Row="3" HorizontalAlignment="Right" 
                    Margin="0 12 0 0"
                    d:Visibility="Visible"
                    CommandParameter="{Binding InvokeCommandParameter, RelativeSource={RelativeSource AncestorType={x:Type controls:WizardOptionControl}, Mode=FindAncestor}}"
                    Command="{Binding InvokedCommand, RelativeSource={RelativeSource AncestorType={x:Type controls:WizardOptionControl}, Mode=FindAncestor}}"
                    Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter2}, RelativeSource={RelativeSource AncestorType={x:Type controls:WizardOptionControl}, Mode=FindAncestor}}"
                    Content="确定"/>
        </Grid>
    </Border>
</UserControl>
